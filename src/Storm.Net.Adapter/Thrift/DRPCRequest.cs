/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System.Text;
using Thrift.Protocol;

public partial class DRPCRequest : TBase
{

    public string Func_args { get; set; }

    public string Request_id { get; set; }

    public DRPCRequest()
    {
    }

    public DRPCRequest(string func_args, string request_id) : this()
    {
        this.Func_args = func_args;
        this.Request_id = request_id;
    }

    public void Read(TProtocol iprot)
    {
        bool isset_func_args = false;
        bool isset_request_id = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
            field = iprot.ReadFieldBegin();
            if (field.Type == TType.Stop)
            {
                break;
            }
            switch (field.ID)
            {
                case 1:
                    if (field.Type == TType.String)
                    {
                        Func_args = iprot.ReadString();
                        isset_func_args = true;
                    }
                    else
                    {
                        TProtocolUtil.Skip(iprot, field.Type);
                    }
                    break;
                case 2:
                    if (field.Type == TType.String)
                    {
                        Request_id = iprot.ReadString();
                        isset_request_id = true;
                    }
                    else
                    {
                        TProtocolUtil.Skip(iprot, field.Type);
                    }
                    break;
                default:
                    TProtocolUtil.Skip(iprot, field.Type);
                    break;
            }
            iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_func_args)
            throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_request_id)
            throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot)
    {
        TStruct struc = new TStruct("DRPCRequest");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "func_args";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Func_args);
        oprot.WriteFieldEnd();
        field.Name = "request_id";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Request_id);
        oprot.WriteFieldEnd();
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
    }

    public override string ToString()
    {
        StringBuilder __sb = new StringBuilder("DRPCRequest(");
        __sb.Append(", Func_args: ");
        __sb.Append(Func_args);
        __sb.Append(", Request_id: ");
        __sb.Append(Request_id);
        __sb.Append(")");
        return __sb.ToString();
    }

}